import PropTypes from 'prop-types';
import { useTranslation } from 'react-i18next';

export default function Country({ ny, utc, onClick }) {
  const { t } = useTranslation();

  const handlePointerUp = e => {
    e.stopPropagation();
    const zoneId = e.currentTarget.getAttribute('data-id');
    const code = (
      e.currentTarget.getAttribute('data-country') || ''
    ).toUpperCase();
    onClick?.(zoneId, code, e);
  };

  return (
    <g
      id="Tailand"
      className="countryGr"
      data-tt="2"
      data-id={utc}
      data-country="TH"
      data-label={`${t('countries.tailand')} ${utc}`}
      onClick={handlePointerUp}
      data-time={ny.display}
    >
      <path
        d="M1317.88 541.401L1318.38 542.813L1317.73 543.396L1317.88 541.401Z"
        fill="#FA7850"
      />
      <path
        d="M1338.17 522.228L1337.53 522.358L1337.31 521.488L1338.17 522.228Z"
        fill="#FA7850"
      />
      <path
        d="M1326.01 535.161L1325.8 534.37L1326.54 534.344L1326.01 535.161Z"
        fill="#FA7850"
      />
      <path
        d="M1324.42 479.935L1325.96 479.247L1326.96 480.356L1327.83 479.617L1328.97 480.747L1328.14 482.929L1329.02 484.19L1332.47 483.836L1332.12 484.606L1332.83 486.523L1331.5 489.862L1332.01 491.591L1330.78 494.07L1331.9 494.575L1336.57 490.773L1339.38 492.851L1340.28 491.971L1341.19 491.883L1343.07 489.627L1345.78 490.159L1347.23 492.445L1349.92 495.075L1349.69 499.429L1351.38 501.57L1353.01 502.028L1352.85 502.961L1354 503.924L1353.24 505.315L1353.52 509.336L1353.07 509.966L1351.35 511.033L1350.48 510.122L1342.19 510.461L1340.65 511.299L1339.66 513.086L1337.8 514.752L1338.59 518.898L1339.93 520.127L1340.56 524.044L1339.8 522.07L1337.47 521.257L1337.78 520.414L1337.26 520.69L1334.97 518.726L1330.4 518.95L1330.96 514.862L1329.08 514.153L1325.92 515.726L1326.62 516.919L1325.93 519.018L1326.24 521.242L1321.96 530.388L1322.28 531.393L1321.89 533.278L1322.74 535.263L1322.42 536.065L1325 535.664L1329 546.086L1327.14 543.351L1326.98 544.476L1328.19 546.273L1329.05 546.18L1331.41 547.898L1332.85 547.81L1332.5 547.419L1333.49 547.815L1336.5 550.987L1335.45 553.101L1334.54 553.346L1333.59 552.752L1331.85 553.971L1331.05 553.252L1331.65 550.987L1330.42 550.976L1329.86 549.726L1328.01 549.471L1327.14 548.632L1326.76 550.049L1324.57 547.731L1324.81 546.539L1324.02 546.403L1324.12 545.362L1323.06 545.632L1322.47 543.924L1321.35 543.648L1321.49 542.627L1319.48 540.372L1318.31 540.705L1318.07 541.497L1317.19 539.497L1317.86 536.086L1320.66 528.356L1324.4 523.075L1323.33 519.33L1321.73 516.846L1322.18 516.164L1322.04 513.523L1318.18 508.872L1317.29 507.096L1317.25 505.94L1319.11 505.309V501.731L1320.48 501.304L1320.8 500.023L1320.49 499.622L1319.78 500.601L1318.65 497.049L1314.73 492.721L1314.98 491.955L1314.48 490.434L1313.78 490.445L1313.11 488.945L1315.12 488.867L1315.59 483.794L1316.57 482.565L1318.59 483.158L1321.2 482.679L1321.93 480.95L1323.73 480.835L1323.42 479.585L1324.42 479.935Z"
        fill="#FA7850"
      />
    </g>
  );
}

Country.propTypes = {
  ny: PropTypes.shape({
    display: PropTypes.string.isRequired,
  }).isRequired,
};
